// Code generated by MockGen. DO NOT EDIT.
// Source: factory.go

// Package statistics is a generated GoMock package.
package statistics

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	statistics "github.com/pivonroll/EventStore-Client-Go/projections/statistics"
	projections "github.com/pivonroll/EventStore-Client-Go/protos/projections"
)

// MockReaderFactory is a mock of ReaderFactory interface.
type MockReaderFactory struct {
	ctrl     *gomock.Controller
	recorder *MockReaderFactoryMockRecorder
}

// MockReaderFactoryMockRecorder is the mock recorder for MockReaderFactory.
type MockReaderFactoryMockRecorder struct {
	mock *MockReaderFactory
}

// NewMockReaderFactory creates a new mock instance.
func NewMockReaderFactory(ctrl *gomock.Controller) *MockReaderFactory {
	mock := &MockReaderFactory{ctrl: ctrl}
	mock.recorder = &MockReaderFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReaderFactory) EXPECT() *MockReaderFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockReaderFactory) Create(client projections.Projections_StatisticsClient) statistics.Reader {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", client)
	ret0, _ := ret[0].(statistics.Reader)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockReaderFactoryMockRecorder) Create(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockReaderFactory)(nil).Create), client)
}
