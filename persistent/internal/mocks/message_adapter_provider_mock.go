// Code generated by MockGen. DO NOT EDIT.
// Source: message_adapter_provider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	message_adapter "github.com/pivonroll/EventStore-Client-Go/persistent/internal/message_adapter"
)

// MockMessageAdapterProvider is a mock of MessageAdapterProvider interface.
type MockMessageAdapterProvider struct {
	ctrl     *gomock.Controller
	recorder *MockMessageAdapterProviderMockRecorder
}

// MockMessageAdapterProviderMockRecorder is the mock recorder for MockMessageAdapterProvider.
type MockMessageAdapterProviderMockRecorder struct {
	mock *MockMessageAdapterProvider
}

// NewMockMessageAdapterProvider creates a new mock instance.
func NewMockMessageAdapterProvider(ctrl *gomock.Controller) *MockMessageAdapterProvider {
	mock := &MockMessageAdapterProvider{ctrl: ctrl}
	mock.recorder = &MockMessageAdapterProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageAdapterProvider) EXPECT() *MockMessageAdapterProviderMockRecorder {
	return m.recorder
}

// GetMessageAdapter mocks base method.
func (m *MockMessageAdapterProvider) GetMessageAdapter() message_adapter.MessageAdapter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageAdapter")
	ret0, _ := ret[0].(message_adapter.MessageAdapter)
	return ret0
}

// GetMessageAdapter indicates an expected call of GetMessageAdapter.
func (mr *MockMessageAdapterProviderMockRecorder) GetMessageAdapter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageAdapter", reflect.TypeOf((*MockMessageAdapterProvider)(nil).GetMessageAdapter))
}
